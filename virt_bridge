#!/bin/bash
echo;
# Check if the UID is 0 (root)
if [ "$(id -u)" -ne 0 ]; then
    echo "This script must be run as root!" >&2
    read -rp "The program will finish (Type 'ok' or 'any key'): " response1
    exit 1  # Exit the script with an error code
fi

# The script continues here if the user is root
echo "You are logged in as root. Continuing the script..."
echo;

echo "----------------------------------------------------------------------------------------------------";
echo "QEMU-KVM Virt-Manager Bridge Network Configuration";
echo "----------------------------------------------------------------------------------------------------";
echo "";
read -rp "Enter the bridge name you want to create:" bridge
echo "The chosen bridge name is: $bridge"
echo "";
echo ""


echo "Creating file $bridge.xml"
cat > $bridge.xml << EOF
<network>
    <name>$bridge</name>
    <forward mode="bridge"/>
    <bridge name="$bridge"/>
</network>
EOF

sudo echo "Turn off network...";
sudo echo "";
sudo echo "sudo nmcli networking off;";
sudo service network-manager stop;
sudo systemctl stop NetworkManager;
sudo nmcli networking off;
sudo echo "";


echo;
echo "Restarting virt-manager service..."
echo;
sudo systemctl stop libvirtd.socket;
sudo systemctl stop libvirtd-admin.socket;
sudo systemctl stop libvirtd-ro.socket;
sudo systemctl stop libvirtd;

sudo systemctl status libvirtd.socket;
sudo systemctl status libvirtd-admin.socket;
sudo systemctl status libvirtd-ro.socket;

sudo systemctl stop libvirtd;
sudo systemctl disable libvirtd;
sudo systemctl enable libvirtd;
sudo systemctl start libvirtd;
sudo systemctl restart libvirtd;
sudo systemctl status libvirtd;

sudo systemctl start libvirtd.socket;
sudo systemctl start libvirtd-admin.socket;
sudo systemctl start libvirtd-ro.socket;
sudo systemctl restart libvirtd.socket;
sudo systemctl restart libvirtd-admin.socket;
sudo systemctl restart libvirtd-ro.socket;

echo;
echo "Bridged Configuration do not add or modify firewall rules..."
echo;

echo;
echo "Allow (ip forward)..."
echo;
sudo echo "Command: sudo echo 1 > /proc/sys/net/ipv4/ip_forward";
sudo echo 1 > /proc/sys/net/ipv4/ip_forward;
sudo echo "";

sudo echo "Checking with cat /proc/sys/net/ipv4/ip_forward";
sudo echo "Need be 1";
cat /proc/sys/net/ipv4/ip_forward;
sudo echo "";

echo;
echo "Configuring virt-manager..."
echo;
echo "sudo virsh list --all;";
sudo virsh list --all;
echo "";
echo "sudo virsh net-define bridged-network.xml;";
sudo virsh net-define $bridge.xml;
echo "";
echo "sudo virsh net-start bridged-network;";
sudo virsh net-start $bridge;
echo "";
echo "sudo virsh net-autostart bridged-network;";
sudo virsh net-autostart $bridge;
echo;


sudo echo "Restart network...";
sudo echo "";
sudo service network-manager stop;
sudo service network-manager start;
sudo service network-manager restart;
sudo systemctl stop NetworkManager;
sudo systemctl disable NetworkManager;
sudo systemctl enable NetworkManager;
sudo systemctl start NetworkManager;
sudo systemctl restart NetworkManager;
sudo nmcli networking off;
sudo nmcli networking on;
sudo echo;

sudo echo "";
echo "############################ IPTABLES Rules ############################"
sudo echo "";
sudo echo "############################ Table Filter ############################";
sudo iptables -t filter -S;
sudo echo "";

sudo echo "############################ Table Nat ############################";
sudo iptables -t nat -S;
sudo echo "";

sudo echo "############################ Table Mangle ############################";
sudo iptables -t mangle -S;
sudo echo "";

sudo echo "############################ Table Raw ############################";
sudo iptables -t raw -S;
sudo echo "############################ End IPTABLES Rules ############################";
sudo echo "";

echo;
echo "-------------------------------";
echo "List of all Virtual Machines"
echo "-------------------------------";
echo;
sudo virsh list --all;
echo;
echo "-------------------------------";
echo "List of all Networks"
echo "-------------------------------";
echo;
sudo virsh net-list;
echo;






#echo "Example for a bridge configuration in cli mode...";
#echo "#!/bin/bash"
#echo "sudo virt-install \ "
#echo "  --vcpus=1 \ "
#echo "  --memory=1024 \ "
#echo "  --cdrom=/home/user/Downloads/debian-10.8.0-amd64-DVD-1.iso \ "
#echo "  --disk size=7 \ "
#echo "  --os-variant=debian10 \ "
#echo "  --network network=bridge"
#echo;





